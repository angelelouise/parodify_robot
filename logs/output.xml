<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.9.2 on win32)" generated="20210404 14:17:07.402" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="E:\parodify_robot\tests">
<suite id="s1-s1" name="Login" source="E:\parodify_robot\tests\login.robot">
<test id="s1-s1-t1" name="Login com sucesso">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:08.118" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:08.213" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:08.117" endtime="20210404 14:17:08.214"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:10.025" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:08.214" endtime="20210404 14:17:10.025"/>
</kw>
<status status="PASS" starttime="20210404 14:17:08.117" endtime="20210404 14:17:10.025"/>
</kw>
<kw name="Login with" library="auth">
<arg>${LOGIN_PADRAO}</arg>
<arg>${LOGIN_PADRAO_PWD}</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:10.026" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:10.026" endtime="20210404 14:17:10.056"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:10.056" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:10.056" endtime="20210404 14:17:10.068"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:10.068" endtime="20210404 14:17:10.929"/>
</kw>
<status status="PASS" starttime="20210404 14:17:10.025" endtime="20210404 14:17:10.929"/>
</kw>
<kw name="Logout Link Should Be Visible" library="auth">
<kw name="Wait For Elements State" library="Browser">
<arg>${LOGOUT_LINK}</arg>
<arg>visible</arg>
<arg>10</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210404 14:17:11.117" level="INFO">Wait for Element with selector: css=a[href$="sign_out"]</msg>
<status status="PASS" starttime="20210404 14:17:10.930" endtime="20210404 14:17:11.117"/>
</kw>
<status status="PASS" starttime="20210404 14:17:10.930" endtime="20210404 14:17:11.117"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210404 14:17:11.188" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210404 14:17:11.117" endtime="20210404 14:17:11.188"/>
</kw>
<tag>smoke</tag>
<status status="PASS" starttime="20210404 14:17:08.116" endtime="20210404 14:17:11.189"/>
</test>
<test id="s1-s1-t2" name="Senha incorreta">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:11.210" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:11.283" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:11.210" endtime="20210404 14:17:11.284"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:12.809" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:11.284" endtime="20210404 14:17:12.809"/>
</kw>
<status status="PASS" starttime="20210404 14:17:11.210" endtime="20210404 14:17:12.809"/>
</kw>
<kw name="Login with" library="auth">
<arg>${LOGIN_PADRAO}</arg>
<arg>abc123</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:12.811" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:12.810" endtime="20210404 14:17:12.837"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:12.838" level="INFO">Fills the text 'abc123' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:12.838" endtime="20210404 14:17:12.849"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:12.849" endtime="20210404 14:17:13.634"/>
</kw>
<status status="PASS" starttime="20210404 14:17:12.810" endtime="20210404 14:17:13.635"/>
</kw>
<kw name="Alert Should Be" library="auth">
<arg>${MENSSAGEM_ERRO}</arg>
<kw name="Get Text" library="Browser">
<arg>css=.is-danger .message-body</arg>
<arg>should be</arg>
<arg>${expect}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210404 14:17:13.636" endtime="20210404 14:17:13.828"/>
</kw>
<status status="PASS" starttime="20210404 14:17:13.635" endtime="20210404 14:17:13.828"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210404 14:17:13.978" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210404 14:17:13.829" endtime="20210404 14:17:13.978"/>
</kw>
<status status="PASS" starttime="20210404 14:17:11.207" endtime="20210404 14:17:13.978"/>
</test>
<test id="s1-s1-t3" name="Email incorreto">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:13.997" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:14.070" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:13.997" endtime="20210404 14:17:14.071"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:15.588" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:14.071" endtime="20210404 14:17:15.588"/>
</kw>
<status status="PASS" starttime="20210404 14:17:13.997" endtime="20210404 14:17:15.588"/>
</kw>
<kw name="Login with" library="auth">
<arg>teste@parodify.com</arg>
<arg>${LOGIN_PADRAO_PWD}</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:15.589" level="INFO">Fills the text 'teste@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:15.589" endtime="20210404 14:17:15.616"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:15.616" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:15.616" endtime="20210404 14:17:15.626"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:15.626" endtime="20210404 14:17:16.171"/>
</kw>
<status status="PASS" starttime="20210404 14:17:15.588" endtime="20210404 14:17:16.171"/>
</kw>
<kw name="Alert Should Be" library="auth">
<arg>${MENSSAGEM_ERRO}</arg>
<kw name="Get Text" library="Browser">
<arg>css=.is-danger .message-body</arg>
<arg>should be</arg>
<arg>${expect}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210404 14:17:16.172" endtime="20210404 14:17:16.348"/>
</kw>
<status status="PASS" starttime="20210404 14:17:16.172" endtime="20210404 14:17:16.348"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210404 14:17:16.498" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210404 14:17:16.349" endtime="20210404 14:17:16.498"/>
</kw>
<status status="PASS" starttime="20210404 14:17:13.994" endtime="20210404 14:17:16.498"/>
</test>
<test id="s1-s1-t4" name="Email não informado">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:16.520" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:16.609" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:16.519" endtime="20210404 14:17:16.609"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:18.407" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:16.610" endtime="20210404 14:17:18.407"/>
</kw>
<status status="PASS" starttime="20210404 14:17:16.519" endtime="20210404 14:17:18.407"/>
</kw>
<kw name="Login with" library="auth">
<arg>${EMPTY}</arg>
<arg>${LOGIN_PADRAO_PWD}</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:18.409" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:18.409" endtime="20210404 14:17:18.429"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:18.429" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:18.429" endtime="20210404 14:17:18.445"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:18.445" endtime="20210404 14:17:19.097"/>
</kw>
<status status="PASS" starttime="20210404 14:17:18.408" endtime="20210404 14:17:19.097"/>
</kw>
<kw name="Alert Should Be" library="auth">
<arg>${MENSSAGEM_ERRO}</arg>
<kw name="Get Text" library="Browser">
<arg>css=.is-danger .message-body</arg>
<arg>should be</arg>
<arg>${expect}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210404 14:17:19.098" endtime="20210404 14:17:19.305"/>
</kw>
<status status="PASS" starttime="20210404 14:17:19.097" endtime="20210404 14:17:19.305"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210404 14:17:19.445" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210404 14:17:19.306" endtime="20210404 14:17:19.445"/>
</kw>
<status status="PASS" starttime="20210404 14:17:16.517" endtime="20210404 14:17:19.446"/>
</test>
<test id="s1-s1-t5" name="Senha não informada">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:19.474" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:19.557" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:19.474" endtime="20210404 14:17:19.557"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:21.572" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:19.557" endtime="20210404 14:17:21.572"/>
</kw>
<status status="PASS" starttime="20210404 14:17:19.473" endtime="20210404 14:17:21.572"/>
</kw>
<kw name="Login with" library="auth">
<arg>${LOGIN_PADRAO}</arg>
<arg>${EMPTY}</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:21.573" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:21.573" endtime="20210404 14:17:21.600"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:21.601" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:21.600" endtime="20210404 14:17:21.611"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:21.611" endtime="20210404 14:17:21.927"/>
</kw>
<status status="PASS" starttime="20210404 14:17:21.572" endtime="20210404 14:17:21.928"/>
</kw>
<kw name="Alert Should Be" library="auth">
<arg>${MENSSAGEM_ERRO}</arg>
<kw name="Get Text" library="Browser">
<arg>css=.is-danger .message-body</arg>
<arg>should be</arg>
<arg>${expect}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210404 14:17:21.928" endtime="20210404 14:17:22.117"/>
</kw>
<status status="PASS" starttime="20210404 14:17:21.928" endtime="20210404 14:17:22.117"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210404 14:17:22.263" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-5.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210404 14:17:22.118" endtime="20210404 14:17:22.263"/>
</kw>
<status status="PASS" starttime="20210404 14:17:19.471" endtime="20210404 14:17:22.263"/>
</test>
<doc>Testes da página de login</doc>
<status status="PASS" starttime="20210404 14:17:07.422" endtime="20210404 14:17:22.281"/>
</suite>
<suite id="s1-s2" name="Player" source="E:\parodify_robot\tests\player.robot">
<test id="s1-s2-t1" name="Reproduzir paródia bug de manhã">
<kw name="Login" library="auth" type="SETUP">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210404 14:17:22.294" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210404 14:17:22.377" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210404 14:17:22.294" endtime="20210404 14:17:22.377"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210404 14:17:24.218" level="INFO">Successfully initialized new page object and opened url: http://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210404 14:17:22.377" endtime="20210404 14:17:24.218"/>
</kw>
<status status="PASS" starttime="20210404 14:17:22.294" endtime="20210404 14:17:24.218"/>
</kw>
<kw name="Login with" library="auth">
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>id=user_email</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:24.219" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:24.219" endtime="20210404 14:17:24.246"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=user_password</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210404 14:17:24.246" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210404 14:17:24.246" endtime="20210404 14:17:24.256"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=input[type=submit]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:24.256" endtime="20210404 14:17:25.088"/>
</kw>
<status status="PASS" starttime="20210404 14:17:24.218" endtime="20210404 14:17:25.088"/>
</kw>
<status status="PASS" starttime="20210404 14:17:22.294" endtime="20210404 14:17:25.088"/>
</kw>
<kw name="Open Search Page" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href*=search]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:25.089" endtime="20210404 14:17:25.317"/>
</kw>
<status status="PASS" starttime="20210404 14:17:25.089" endtime="20210404 14:17:25.317"/>
</kw>
<kw name="Check If Search Page is Opened" library="nav">
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//h2[contains(text(), "Buscar")]</arg>
<arg>visible</arg>
<arg>10</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210404 14:17:25.842" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Buscar")]</msg>
<status status="PASS" starttime="20210404 14:17:25.318" endtime="20210404 14:17:25.842"/>
</kw>
<status status="PASS" starttime="20210404 14:17:25.318" endtime="20210404 14:17:25.843"/>
</kw>
<kw name="Click On Sertanejo" library="nav">
<kw name="Click" library="Browser">
<arg>xpath=//img[contains(@src, "sertanejo.png")]/..</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:25.843" endtime="20210404 14:17:26.393"/>
</kw>
<status status="PASS" starttime="20210404 14:17:25.843" endtime="20210404 14:17:26.393"/>
</kw>
<kw name="Check If Sertanejo is Opened" library="nav">
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//h2[contains(text(), "Sertanejo")]</arg>
<arg>visible</arg>
<arg>10</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210404 14:17:26.943" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Sertanejo")]</msg>
<status status="PASS" starttime="20210404 14:17:26.394" endtime="20210404 14:17:26.943"/>
</kw>
<status status="PASS" starttime="20210404 14:17:26.393" endtime="20210404 14:17:26.943"/>
</kw>
<kw name="Open Album" library="nav">
<arg>${ALBUM}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//p[contains(text(), "${artist_name}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:26.944" endtime="20210404 14:17:26.983"/>
</kw>
<status status="PASS" starttime="20210404 14:17:26.944" endtime="20210404 14:17:26.983"/>
</kw>
<kw name="Check If Album is Opened" library="nav">
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//h2[contains(text(), "Músicas")]</arg>
<arg>visible</arg>
<arg>10</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210404 14:17:27.559" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Músicas")]</msg>
<status status="PASS" starttime="20210404 14:17:26.983" endtime="20210404 14:17:27.559"/>
</kw>
<status status="PASS" starttime="20210404 14:17:26.983" endtime="20210404 14:17:27.559"/>
</kw>
<kw name="Click On The Music" library="song">
<arg>${SONG}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//h2[contains(text(), "${song_name}")]/../..//div[contains(@class, "play")]//a</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210404 14:17:27.560" endtime="20210404 14:17:27.601"/>
</kw>
<status status="PASS" starttime="20210404 14:17:27.559" endtime="20210404 14:17:27.601"/>
</kw>
<kw name="Check If Music is Playing" library="song">
<arg>${SONG}</arg>
<kw name="Get Style" library="Browser">
<arg>xpath=//h2[contains(text(), "${song_name}")]/../../..</arg>
<arg>color</arg>
<arg>equal</arg>
<arg>rgb(225, 0, 180)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Gets the computed style properties of the element selected by ``selector``.</doc>
<msg timestamp="20210404 14:17:27.611" level="INFO">Value of key: color</msg>
<msg timestamp="20210404 14:17:27.612" level="INFO">Value of selected property: rgb(225, 0, 180)</msg>
<status status="PASS" starttime="20210404 14:17:27.602" endtime="20210404 14:17:27.612"/>
</kw>
<status status="PASS" starttime="20210404 14:17:27.602" endtime="20210404 14:17:27.612"/>
</kw>
<status status="PASS" starttime="20210404 14:17:22.292" endtime="20210404 14:17:27.612"/>
</test>
<doc>Testando o player de paródias</doc>
<status status="PASS" starttime="20210404 14:17:22.284" endtime="20210404 14:17:27.627"/>
</suite>
<status status="PASS" starttime="20210404 14:17:07.403" endtime="20210404 14:17:27.630"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Login">Tests.Login</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Player">Tests.Player</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
